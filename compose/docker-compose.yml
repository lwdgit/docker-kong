version: '2.1'
services:
  kong:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    command: kong start --run-migrations
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ../alpine/docker-entrypoint.sh:/docker-entrypoint.sh
      - ../kong-plugin/:/kong-plugin/
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: '0.0.0.0:8001'
      KONG_CASSANDRA_CONTACT_POINTS: db
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: db
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_CUSTOM_PLUGINS: myplugin
    links:
      - db:db
    ports:
      - "80:8000/tcp"
      - "8001:8001/tcp"
      - "443:8443/tcp"
      - "8444:8444/tcp"
    restart: on-failure
  db:
    image: postgres:9.5
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      POSTGRES_USER: ${KONG_PG_USER:-kong}
    volumes:
      - ../kong-database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-kong}"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
  konga:
    build: ../konga
    environment:
      - NODE_ENV=production
    depends_on:
      - kong
    ports:
      - "1337:1337"
    volumes:
      - ../kongadata:/app/kongadata
    restart: on-failure